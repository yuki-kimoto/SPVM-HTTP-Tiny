# Copyright (c) 2023 Yuki Kimoto
# MIT License

class HTTP::Tiny::Message::Response extends HTTP::Tiny::Message {
  version_from HTTP::Tiny;
  
  allow HTTP::Tiny::Handle;
  allow HTTP::Tiny;
  
  use HTTP::Tiny::Headers;
  use HTTP::Tiny::Status;
  
  # Fields
  has protocol : ro string;
  
  has status : ro int;
  
  has success : ro byte;
  
  has content_buffer : StringBuffer;
  
  # Class Methods
  private static method new : HTTP::Tiny::Message::Response () {
    
    my $self = new HTTP::Tiny::Message::Response;
    
    $self->{content_buffer} = StringBuffer->new;
    
    $self->{headers} = HTTP::Tiny::Headers->new;
    
    return $self;
  }
  
  # Instance Methods
  method content : string () {
    return $self->{content_buffer}->to_string;
  }
  
  method reason : string () {
    
    my $status = $self->{status};
    
    my $reason = HTTP::Tiny::Status->status_message($status);
    
    unless ($reason) {
      die "The status code $status is invalid.";
    }
    
    return $reason;
  }
  
  method build_start_line : string () {
    
    my $status = $self->{status};
    
    my $reason = $self->reason;
    
    my $start_line = "HTTP/1.1 $status $reason\x0d\x0a";
    
    return $start_line;
  }
  
  method build_headers : string () {
    # TODO
    
    return undef;
  }
  
  method build_body : string (){
    # TODO
    
    return undef;
  }
  
}
